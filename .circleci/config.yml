# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
        
      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            
            mkdir Data 
            mkdir -p Gym/feature_list/time_travel
            mkdir -p Gym/pickled_models/time_travel
            mkdir -p Predictions/time_travel
            
            cd Test
            
            mv \
            forecast_db.csv \
            history_db.csv \
            master_db.csv \
            dba.csv \
            region_codes.csv \
            ..
            
            cd ..
            
            mv \
            forecast_db.csv \
            history_db.csv \
            master_db.csv \
            dba.csv \
            region_codes.csv \
            ./Data
            
            cd Test

            mv \
            'fl2018-10-21 -> 2018-10-15.pkl' \
            'md2018-10-21 -> 2018-10-15.pkl' \
            '2018-10-21 -> 2018-10-15_predict_tm_high.csv' \
            ..
            
            cd ..

            DATE=`date +%Y-%m-%d`

            mv \
            'fl2018-10-21 -> 2018-10-15.pkl' \
            `'./Gym/feature_list/time_travel/% -> 2018-10-15.pkl' $DATE`

            mv \
            'md2018-10-21 -> 2018-10-15.pkl' \
            `'./Gym/pickled_models/time_travel/% -> 2018-10-15.pkl' $DATE`

            mv \
            '2018-10-21 -> 2018-10-15_predict_tm_high.csv' \
            `'./Gym/feature_list/time_travel/% -> 2018-10-15_predict_tm_high.csv' $DATE`
            
            python Time_traveller.py

      - store_artifacts:
          path: test-reports
          destination: test-reports
          